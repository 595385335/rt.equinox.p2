###############################################################################
# Copyright (c) 2009 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
differentNumberOfEntries=Difference: {0} contains {1} files and {2} contains {3} files
differentEntry=Difference found for {0} within {1}
missingEntry=Missing {0} withim {1}
ioexception=IOException comparing {0} and {1} 
ioexceptioninentry=IOException checking {0} within {1}
filenotfoundexception=FileNotFoundException checking {0} within {1}

### Disassembler messages

### disassembler
disassembler_description = Default classfile disassembler
disassembler_opentypedeclaration =\ '{'
disassembler_closetypedeclaration = }
disassembler_parametername = arg
disassembler_localvariablename = local_{0}
disassembler_endofmethodheader = ;
disassembler_begincommentline = //\ 
disassembler_fieldhasconstant =\ =\ 
disassembler_endoffieldheader = ;
disassembler_sourceattributeheader = Compiled from\ 
disassembler_enclosingmethodheader = Enclosing Method:
disassembler_exceptiontableheader = Exception Table:
disassembler_arraydimensions = []
disassembler_innerattributesheader = Inner classes:
disassembler_inner_class_info_name = inner class info:
disassembler_outer_class_info_name = outer class info:
disassembler_inner_name = inner name:
disassembler_inner_accessflags = accessflags:\ 
disassembler_signatureattributeheader = // Signature: {0}
disassembler_indentation = \  
disassembler_space = \ 
disassembler_comma = ,
disassembler_openinnerclassentry = [
disassembler_closeinnerclassentry = ]
disassembler_deprecated =\ (deprecated)
disassembler_annotationdefaultheader = Annotation Default:\ 
disassembler_annotationdefaultvalue= {0} (constant type)
disassembler_annotationenumvalue = {0}.{1}(enum type)
disassembler_annotationclassvalue = {0} (class type)
disassembler_annotationannotationvalue = annotation value =
disassembler_annotationarrayvaluestart = [
disassembler_annotationarrayvalueend = ]
disassembler_annotationentrystart = @{0}(
disassembler_annotationentryend = )
disassembler_annotationcomponent = {0}=
disassembler_runtimevisibleannotationsattributeheader= RuntimeVisibleAnnotations:\ 
disassembler_runtimeinvisibleannotationsattributeheader= RuntimeInvisibleAnnotations:\ 
disassembler_runtimevisibleparameterannotationsattributeheader= RuntimeVisibleParameterAnnotations:\ 
disassembler_runtimeinvisibleparameterannotationsattributeheader= RuntimeInvisibleParameterAnnotations:\ 
disassembler_parameterannotationentrystart=Number of annotations for parameter {0}: {1}
### classfileformat decoding
classfileformat_versiondetails =\ (version {0} : {1}.{2}, {3})
classfileformat_methoddescriptor = // Method descriptor {0}
classfileformat_fieldddescriptor = // Field descriptor {0}
classfileformat_stacksAndLocals= // Stack: {0}, Locals: {1}
classfileformat_superflagisnotset = no super bit
classfileformat_superflagisset = super bit
classfileformat_clinitname = '{'}
classformat_classformatexception = Class Format Exception
classfileformat_versionUnknown = unknown

### string displayed for each opcode
classformat_anewarray = {0} {1}
classformat_checkcast = {0} {1}
classformat_instanceof = {0} {1}
classformat_ldc_w_class = {0} <Class {1}>
classformat_ldc_w_float = {0} <Float {1}>
classformat_ldc_w_integer = {0} <Integer {1}>
classformat_ldc_w_string = {0} <String "{1}">
classformat_ldc2_w_long = {0} <Long {1}>
classformat_ldc2_w_double = {0} <Double {1}>
classformat_multianewarray = {0} {1}
classformat_new = {0} {1}
classformat_iinc = {0} {1} {2}{3}
classformat_invokespecial ={0} {1}
classformat_invokeinterface ={0} {2} [nargs: {1}]
classformat_invokestatic ={0} {1}
classformat_invokevirtual ={0} {1}
classformat_getfield ={0} {1}.{2} : {3}
classformat_getstatic ={0} {1}.{2} : {3}
classformat_putstatic ={0} {1}.{2} : {3}
classformat_putfield ={0} {1}.{2} : {3}
classformat_newarray_boolean = {0} boolean
classformat_newarray_char = {0} char
classformat_newarray_float = {0} float
classformat_newarray_double = {0} double
classformat_newarray_byte = {0} byte
classformat_newarray_short = {0} short
classformat_newarray_int = {0} int
classformat_newarray_long = {0} long
classformat_store = {0}{1}
classformat_load = {0}{1}
classfileformat_anyexceptionhandler=any
classfileformat_exceptiontableentry = [pc: {0}, pc: {1}] -> {2} when : {3}
